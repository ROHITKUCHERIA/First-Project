{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/Recipe.js","components/Router.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","getRecipe","style","marginBottom","className","type","name","placeholder","class","Recipes","recipes","map","recipe","key","title","src","image_url","alt","length","concat","substring","publisher","react_router_dom","to","pathname","recipe_id","state","API_KEY","App","_callee","e","recipeName","api_call","data","regenerator_default","wrap","_context","prev","next","target","elements","value","preventDefault","fetch","sent","json","_this","setState","console","log","stop","componentDidMount","localStorage","getItem","componentDidUpdate","JSON","stringify","setItem","components_Form","this","components_Recipes","Component","Recipe","activeRecipe","req","res","location","href","publisher_url","source_url","social_rank","React","Router","react_router","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.464a0df9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.getRecipe}style= {{ marginBottom:\"2rem\" }}>\r\n        <input className=\"form_input\" type=\"text\" name=\"recipeName\" placeholder=\"Search Item\"/> \r\n        <button class=\"btn btn-outline-primary\">Search</button>\r\n        </form>\r\n);\r\nexport default Form;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\"; \r\n\r\nconst Recipes = props => (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n        { props.recipes.map((recipe) => {\r\n        return  ( \r\n            <div key={recipe.title} className=\"col-md-4\" style={{ marginBottom:\"2rem\" }}>\r\n                \r\n                <div className=\"recipes_box\">\r\n                    \r\n                    <img \r\n                     className=\"recipe_box-img\"\r\n                     src= {recipe.image_url} \r\n                     alt={recipe.title}/>\r\n                     \r\n                     <div className=\"recipe_text\">\r\n                         <h5>{ recipe.title.length < 20 ? `${recipe.title}` : `${recipe.title.substring(0, 25)}...` }\r\n                         </h5>\r\n                         <p className=\"recipe_subtitle\">Publisher => <span>\r\n                            { recipe.publisher }\r\n                         </span></p>\r\n                    </div>\r\n                    \r\n                    <button className=\"recipe_buttons\"class=\"btn btn-outline-warning\">\r\n                         <Link to={{ pathname:`/recipe/${recipe.recipe_id}`,\r\n                                     state: { recipe:recipe.title } \r\n                                   }}\r\n                        >View Recipe\r\n                        </Link>\r\n\r\n                    </button> \r\n                    \r\n                </div>\r\n            </div>\r\n            );\r\n        })}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Recipes;","//1 api Key = 7379a617095759050249542d9c0d98c1\n//2 api Key = 7ef4cd7ed52d4ed4604a33ed05e8072e\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Form from \"./components/Form\";\nimport Recipes from './components/Recipes';\n\n\nconst API_KEY=\"7ef4cd7ed52d4ed4604a33ed05e8072e\";\n\nclass App extends Component {\n  state= {\n    recipes: []\n  }\n  getRecipe = async (e) => {\n\n    const recipeName= e.target.elements.recipeName.value;\n    e.preventDefault();\n    const api_call = await fetch (`https://www.food2fork.com/api/search?key=${API_KEY}&q=${recipeName}&count=100`);\n   \n    const data = await api_call.json(); \n    this.setState({ recipes:data.recipes })\n    console.log(this.state.recipes)\n  } \n \n  componentDidMount = () => {\n    const json = localStorage.getItem(\"recipes\");\n  }\n\ncomponentDidUpdate =() => {\n\n  const recipes = JSON.stringify(this.state.recipes);\n  localStorage.setItem(\"recipes\", recipes);\n}\n\nrender() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">FOOD 2 FORK</h1>\n      </header>\n      \n      <Form getRecipe={this.getRecipe} />\n      \n      <Recipes recipes= {this.state.recipes} />\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { HTML5_FMT } from 'moment';\r\n\r\n\r\nconst API_KEY=\"7ef4cd7ed52d4ed4604a33ed05e8072e\";\r\n\r\nclass Recipe extends React.Component { \r\n    state ={ \r\n        activeRecipe: []\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n        const title = this.props.location.state.recipe;\r\n\r\n        const req = await fetch (`https://www.food2fork.com/api/search?key=${API_KEY}&q=${title}`);\r\n   \r\n        const res = await req.json(); \r\n        this.setState({ activeRecipe: res.recipes[0] });\r\n        console.log(this.state.activeRecipe);\r\n    } \r\n\r\n    render(){\r\n        const recipe= this.state.activeRecipe;\r\n        return ( \r\n          <div className=\"container\" >\r\n                {this.state.activeRecipe.length !==0 &&\r\n                <div className=\"active-recipe\">\r\n                <img className=\"active_recipe_img\" src={recipe.image_url} alt={recipe.title} />  \r\n                <h3 className=\"active-recipe_title\"> { recipe.title } </h3>\r\n                <h4 className=\"active-recipe_publisher\" >\r\n                    publisher:<span> {recipe.publisher}</span>\r\n \r\n                </h4>\r\n                \r\n                <p className=\"active-recipe_website\"> Website =>\r\n                     <span> <a href={recipe.publisher_url}>{recipe.publisher_url}</a></span>\r\n                </p>\r\n                \r\n                <p className=\"recipe_URL\"> Recipe-Url : \r\n                     <span> <a href={ recipe.source_url} target=\"#\">{recipe.source_url}</a> </span>\r\n                 </p>\r\n                \r\n                <div>\r\n                    <button className=\"active-recipe_button \" class=\"btn btn-outline-primary\">\r\n                         <Link to=\"/\">GO-HOME</Link>\r\n                    </button> &ensp;&ensp;&ensp;&ensp;&ensp;\r\n\r\n                     <button className=\"Social_Rank\" class=\"btn btn-outline-warning\">\r\n                         Social-Rank : {recipe.social_rank}\r\n                    </button>\r\n                    \r\n                </div>\r\n              \r\n              </div>\r\n                }\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Recipe;  \r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport Recipe from \"./Recipe\"; \r\n\r\nconst Router = () => (\r\n    \r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" component={App} exact/>\r\n            <Route path=\"/recipe/:id\" component={Recipe}/>\r\n            \r\n        </Switch>\r\n    </BrowserRouter>\r\n\r\n);\r\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import './index.css';\n// import App from './App';\nimport Router from \"./components/Router\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}